{"version":3,"sources":["webpack:///./src/components/PaperCanvas.vue?861d","webpack:///./src/views/GrahamScan.vue?3a74","webpack:///./src/components/PaperCanvas.vue?d87e","webpack:///src/components/PaperCanvas.vue","webpack:///./src/components/PaperCanvas.vue?3b6b","webpack:///./src/components/PaperCanvas.vue","webpack:///src/views/GrahamScan.vue","webpack:///./src/views/GrahamScan.vue?35cb","webpack:///./src/views/GrahamScan.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","_v","_s","msg","attrs","on","getMessage","$event","lock","goto","staticStyle","_l","item","key","message","type","indexOf","_k","keyCode","button","addPoints","apply","arguments","reset","last","next","auto","closePreface","_m","_e","staticRenderFns","canvasId","name","props","data","created","mounted","scope","paper","PaperScope","setup","tool","createTool","displayPath","Path","strokeColor","initType4","alert","methods","activate","Tool","drawPoint","path","fillColor","c","value","removeSegments","pointPathMap","points","sortedPoints","convexHullList","convexHullPath","resetDisplay","states","step","type4PointIndex","getPointPath","i","displayPointList","type5LeftPath","type5RightPath","searchAreaPath","p2c","Point","p","x","Math","floor","GLOBAL_CANVAS_HEIGHT","y","sendMessage","$emit","randomGeneratePoints","xMax","GLOBAL_CANVAS_WIDTH","yMax","xArray","push","yArray","xIndex","splice","yIndex","tempXIndex","tempYIndex","pointNum","length","point","currentTurn","endOfCheck","saveState","pointsColor","displayPathPoints","index","readState","state","add","nextState","lastState","onMouseDown","clickPoint","component","components","preface","currentIndex","clickAuto","autoing","text","$refs"],"mappings":"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","file":"js/chunk-d6f4ba6c.73b236ef.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaperCanvas.vue?vue&type=style&index=0&id=09070d28&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Nav',{ref:\"nav\"}),_c('h1',{staticClass:\"subtitle\"},[_vm._v(_vm._s(_vm.msg))]),_c('div',{staticClass:\"tile is-ancestor\"},[_c('div',{staticClass:\"tile is-parent is-8\"},[_c('div',{staticClass:\"tile is-child box\"},[_c('PaperCanvas',{ref:\"c\",attrs:{\"type\":4,\"canvasId\":'canvas-one'},on:{\"message\":_vm.getMessage,\"lock\":function($event){_vm.lock=true},\"unlock\":function($event){_vm.lock=false},\"goto\":_vm.goto}})],1)]),_c('div',{staticClass:\"tile is-vertical is-parent\"},[_c('div',{staticClass:\"tile is-child box\",staticStyle:{\"min-height\":\"500px\",\"height\":\"500px\"}},[_c('div',{staticStyle:{\"margin-top\":\"150px\"}},_vm._l((_vm.text),function(item){return _c('div',{key:item.message},[(item.highLight)?_c('div',[_c('div',{staticClass:\"block has-background-primary has-text-white\"},[_vm._v(\" \"+_vm._s(item.msg)+\" \")])]):_c('div',[_c('div',{staticClass:\"block mb-3\"},[_vm._v(\" \"+_vm._s(item.msg)+\" \")])])])}),0)]),_c('div',{staticClass:\"tile is-child\"},[_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.addPoints.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Add 10 \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.reset.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Reset \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.last.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Last \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.next.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Next \")])]),(_vm.clickAuto)?_c('button',{staticClass:\"button is-primary\",on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.auto.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Auto \")])]):_c('button',{staticClass:\"button\",on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.auto.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Auto \")])])])])]),(_vm.preface)?_c('div',[_c('div',{staticClass:\"modal is-active\"},[_c('div',{staticClass:\"modal-background\"}),_c('div',{staticClass:\"modal-card\",staticStyle:{\"max-width\":\"500px\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"Explanation\")]),_c('button',{staticClass:\"delete\",attrs:{\"aria-label\":\"close\"},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.closePreface.apply(null, arguments)}}})]),_vm._m(0)])])]):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"modal-card-body\"},[_c('p',{staticClass:\"content\"},[_vm._v(\" You may feel it is redundant to check and compare each line's slope for each point pair and yes, you are right. We can sort those points in a way so that we can efficiently compare them and prune out some point pairs whose connections definitely could not be on the convex hull. Here is our next algorithm, Graham Scan. It sorts all points one time and use linear time to go through those ordered points and determine the convex hull in \"),_c('strong',[_vm._v(\"O(nlogn)\")]),_vm._v(\".\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{ref:\"cs\",staticClass:\"canvas-style\",attrs:{\"id\":_vm.canvasId}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <canvas ref=\"cs\" :id=\"canvasId\" class=\"canvas-style\"/>\n  </div>\n</template>\n\n<script>\nconst paper = require(\"paper\");\nimport grahamScan from \"../algorithm/GrahamScan\";\nimport algoTools from \"../algorithm/AlgoTools\";\n\n// const primary = \"#00d1b2\";\n// const link = \"#3273dc\";\nconst complete = \"#ee9a33\";\nconst danger = \"#ff3860\";\n\nexport default {\n  name: \"PaperCanvas\",\n  props: ['canvasId', 'type'],\n  data: () => ({\n    path: null,\n    scope: null,\n    tool: null,\n    GLOBAL_CANVAS_WIDTH: 800,\n    GLOBAL_CANVAS_HEIGHT: 600,\n    points: [],\n    pointPathMap: {},\n    sortedPoints: [],\n    addPoints: true,\n    convexHullList: [],\n    convexHullPath: null,\n    displayPath: null,\n    displayPointList: [],\n    searchAreaPath: null,\n    states: [],\n    step: -1,\n    type4PointIndex: 0,\n  }),\n  created() {\n\n  },\n  mounted() {\n    this.scope = new paper.PaperScope();\n    this.scope.setup(this.canvasId);\n    this.tool = this.createTool(this.scope);\n    this.displayPath = new paper.Path({\n      strokeColor: \"#000000\",\n    });\n    if (this.type === 4) {\n      this.initType4();\n    } else {\n      alert(\"E-Doz\");\n    }\n  },\n  methods: {\n    createTool(scope) {\n      scope.activate();\n      return new paper.Tool();\n    },\n    drawPoint(scope, p, r, c = \"#000000\") {\n      scope.activate();\n      let path = new paper.Path.Circle(new paper.Point(p.x, p.y), r);\n      path.fillColor = c;\n      return path;\n    },\n    reset() {\n      for (const [, value] of Object.entries(this.pointPathMap)) {\n        value.removeSegments();\n      }\n      this.pointPathMap = {};\n      this.points = [];\n      this.sortedPoints = [];\n      this.addPoints = true;\n      this.convexHullList = [];\n      if (this.convexHullPath) {\n        this.convexHullPath.removeSegments();\n      }\n      this.convexHullPath = null;\n      this.resetDisplay();\n      this.states = [];\n      this.step = -1;\n      this.type4PointIndex = 0;\n    },\n    resetDisplay() {\n      for (let i = 0; i < this.points.length; i++) {\n        this.getPointPath(this.points[i]).fillColor = \"#000000\";\n      }\n      if (this.displayPath) {\n        this.displayPath.removeSegments();\n      }\n      this.displayPath = new paper.Path({\n        strokeColor: \"#000000\",\n      });\n      this.displayPointList = [];\n      if (this.type5LeftPath != null) {\n        this.type5LeftPath.removeSegments();\n        this.type5LeftPath = null;\n      }\n      if (this.type5RightPath != null) {\n        this.type5RightPath.removeSegments();\n        this.type5RightPath = null;\n      }\n      if (this.searchAreaPath != null) {\n        this.searchAreaPath.removeSegments();\n        this.searchAreaPath = null;\n      }\n    },\n    p2c(p) {\n      return new paper.Point(p.x, Math.floor(this.GLOBAL_CANVAS_HEIGHT - p.y));\n    },\n    sendMessage(msg) {\n      this.$emit(\"message\", msg);\n    },\n    randomGeneratePoints(pointsNum, xMin, xMax, yMin, yMax) {\n      // X and Y coordinates are without repetitions.\n      if (this.addPoints) {\n        let xArray = [];\n        let yArray = [];\n        if (xMax > this.GLOBAL_CANVAS_WIDTH) {\n          xMax = this.GLOBAL_CANVAS_WIDTH;\n        }\n        if (yMax > this.GLOBAL_CANVAS_HEIGHT) {\n          yMax = this.GLOBAL_CANVAS_HEIGHT;\n        }\n        for (let i = xMin; i < xMax; i++) {\n          xArray.push(i);\n        }\n        for (let i = yMin; i < yMax; i++) {\n          yArray.push(i);\n        }\n        for (let i = 0; i < this.points.length; i++) {\n          let xIndex = xArray.indexOf(this.points[i].x);\n          let yIndex = yArray.indexOf(this.points[i].y);\n          if (xIndex !== -1) {\n            xArray.splice(xIndex, 1);\n          }\n          if (yIndex !== -1) {\n            yArray.splice(yIndex, 1);\n          }\n        }\n        for (let i = 0; i < pointsNum; i++) {\n          let tempXIndex = algoTools.getRandomArbitrary(0, xArray.length - 1);\n          let tempYIndex = algoTools.getRandomArbitrary(0, yArray.length - 1);\n          let tempX = xArray[tempXIndex];\n          let tempY = yArray[tempYIndex];\n          xArray.splice(tempXIndex, 1);\n          yArray.splice(tempYIndex, 1);\n          let key = tempX + \",\" + tempY;\n          this.points.push({x: tempX, y: tempY});\n          this.pointPathMap[key] = this.drawPoint(this.scope, this.p2c({x: tempX, y: tempY}), 10);\n        }\n        return true;\n      } else {\n        return false;\n      }\n    },\n    pointNum() {\n      return this.points.length;\n    },\n    getPointPath(point) {\n      return this.pointPathMap[point.x + \",\" + point.y];\n    },\n    currentTurn() {\n      if (this.displayPointList.length < 2) {\n        return -1;\n      }\n      let p1 = this.displayPointList[this.displayPointList.length - 2];\n      let p2 = this.displayPointList[this.displayPointList.length - 1];\n      let p3 = this.sortedPoints[this.type4PointIndex];\n      return algoTools.orient(p1, p2, p3);\n    },\n    endOfCheck() {\n      return this.sortedPoints.length > 0 && this.type4PointIndex >= this.sortedPoints.length;\n    },\n    saveState(index, message) {\n      let pointsColor = [];\n      let displayPathPoints = [];\n      for (let i = 0; i < this.points.length; i++) {\n        pointsColor.push(this.getPointPath(this.points[i]).fillColor);\n      }\n      let segments = this.displayPath.segments;\n      for (let i = 0; i < segments.length; i++) {\n        displayPathPoints.push({x: segments[i].point.x, y: segments[i].point.y});\n      }\n      this.states.push({\n        message: message,\n        index: index,\n        type4PointIndex: this.type4PointIndex,\n        pointsColor: pointsColor,\n        displayPointList: this.displayPointList,\n        displayPathPoints: displayPathPoints,\n      });\n    },\n    readState(step) {\n      let state = this.states[step];\n      if (!state) {\n        return;\n      }\n      this.resetDisplay();\n      this.type4PointIndex = state.type4PointIndex;\n      let pointsColor = state.pointsColor;\n      for (let i = 0; i < this.points.length; i++) {\n        this.getPointPath(this.points[i]).fillColor = pointsColor[i];\n      }\n      let displayPathPoints = state.displayPathPoints;\n      for (let i = 0; i < displayPathPoints.length; i++) {\n        this.displayPath.add(displayPathPoints[i]);\n      }\n      this.displayPointList = state.displayPointList;\n      this.sendMessage(state.message);\n      return state.index;\n    },\n    nextState() {\n      if (this.step + 1 < this.states.length) {\n        this.step++;\n        return this.readState(this.step);\n      } else {\n        return null;\n      }\n    },\n    lastState() {\n      if (this.step - 1 >= 0) {\n        this.step--;\n        return this.readState(this.step);\n      } else {\n        return null;\n      }\n    }\n    ,\n    initType4() {\n      this.tool.onMouseDown = (event) => {\n        if (this.addPoints) {\n          if (this.pointNum() > 200) {\n            this.sendMessage(\"Max point number has been set to 200.\");\n            return;\n          }\n          let clickPoint = this.p2c(event.point);\n          clickPoint.x = Math.floor(clickPoint.x);\n          clickPoint.y = Math.floor(clickPoint.y);\n          for (let i = 0; i < this.points.length; i++) {\n            if (this.points[i].x === clickPoint.x || this.points[i].y === clickPoint.y) {\n              return;\n            }\n          }\n          this.points.push({x: clickPoint.x, y: clickPoint.y});\n          this.pointPathMap[clickPoint.x + \",\" + clickPoint.y] = this.drawPoint(this.scope, this.p2c({\n            x: clickPoint.x,\n            y: clickPoint.y\n          }), 10);\n        }\n      }\n    }\n    ,\n    async show(index) {\n      this.$emit(\"lock\");\n      if (this.type === 4) {\n        let message = \"\";\n        this.addPoints = false;\n        if (this.convexHullList.length < 3) {\n          this.convexHullList = grahamScan.exec(this.points);\n        }\n        this.step++;\n        if (this.step < this.states.length) {\n          this.readState(this.step);\n        } else {\n          this.readState(this.step - 1); // Load the newest state.\n          if (index === 0) {\n            message = \"Point color becomes darker as its x coordinate increasing.\";\n            let pointList = this.points.slice();\n            pointList.sort(function (p1, p2) {\n              let x1 = p1.x\n              let x2 = p2.x;\n              if (x1 === x2) {\n                p2.x += 0.00001; // Impossible!\n              }\n              if (x1 < x2) {\n                return -1;\n              }\n              if (x1 > x2) {\n                return 1;\n              }\n            });\n            this.sortedPoints = pointList.slice();\n            for (let i = 0; i < pointList.length; i++) {\n              let circle = this.pointPathMap[pointList[i].x + \",\" + pointList[i].y];\n              circle.opacity = (1 - (pointList.length - i) / pointList.length) / 2 + 0.3;\n            }\n          } else if (index === 1) {\n            message = \"Initialize lower hull by adding first two points from sorted point list to lower hull path.\"\n            let point1 = this.p2c(this.sortedPoints[0]);\n            let point2 = this.p2c(this.sortedPoints[1]);\n            this.displayPath.add(new paper.Point(point1.x, point1.y));\n            this.displayPath.add(new paper.Point(point2.x, point2.y));\n            this.displayPointList.push(this.sortedPoints[0], this.sortedPoints[1]);\n            this.type4PointIndex = 2;\n          } else if (index === 2) {\n            if (this.displayPointList.length < 2) {\n              message = \"Because there are only one point in lower hull path,\" +\n                  \" we can directly add P3 to the lower hull path and check next point.\";\n              this.displayPointList.push(this.sortedPoints[this.type4PointIndex]);\n              this.displayPath.add(this.p2c(this.sortedPoints[this.type4PointIndex]));\n              this.type4PointIndex++;\n            } else {\n              message = \"Yellow points are P1, P2; Red point is P3.\";\n            }\n            let p1 = this.displayPointList[this.displayPointList.length - 2];\n            let p2 = this.displayPointList[this.displayPointList.length - 1];\n            this.getPointPath(p1).fillColor = complete;\n            this.getPointPath(p2).fillColor = complete;\n            if (this.endOfCheck()) {\n              message = \"There are only two possible points could be on lower hull, so we have nothing need to do\" +\n                  \" but connect them.\";\n            } else {\n              let p3 = this.sortedPoints[this.type4PointIndex];\n              this.getPointPath(p3).fillColor = danger;\n            }\n          } else if (index === 3) {\n            message = \"Connect P1 P2 P3 in order.\";\n            let p3 = this.sortedPoints[this.type4PointIndex];\n            this.displayPath.add(this.p2c(p3));\n          } else if (index === 4) {\n            message = \"Here is partial lower hull.\";\n            let p3 = this.sortedPoints[this.type4PointIndex];\n            this.getPointPath(p3).fillColor = complete;\n            this.displayPointList.push(p3);\n            this.type4PointIndex++;\n          } else if (index === 5) {\n            message = \"Remove P2 in convex hull path for the reason it is above line segment P1P3.\";\n            let p2 = this.displayPointList.pop();\n            this.getPointPath(p2).fillColor = \"#000000\";\n            this.displayPath.removeSegment(this.displayPath.segments.length - 1);\n            this.displayPath.removeSegment(this.displayPath.segments.length - 1);\n          } else if (index === 6) {\n            message = \"The algorithm has almost been finished since the algorithm for lower hull can be used for upper\" +\n                \" hull if we rotate the whole graph 180 degree.\";\n          } else if (index === 7) {\n            message = \"Great! We found all points on convex hull in CCW order.\"\n            this.resetDisplay();\n            for (let i = 0; i < this.convexHullList.length; i++) {\n              this.getPointPath(this.convexHullList[i]).fillColor = complete;\n              this.displayPath.add(this.p2c(this.convexHullList[i]));\n            }\n            this.displayPath.add(this.p2c(this.convexHullList[0]));\n          }\n          this.sendMessage(message);\n          this.saveState(index, message);\n        }\n      }\n      this.$emit(\"unlock\");\n    }\n    ,\n  }\n}\n</script>\n\n<style scoped>\n.canvas-style {\n  /*cursor: crosshair;*/\n  cursor: pointer;\n  width: 800px !important;\n  height: 600px !important;\n  border: 5px solid black;\n  border-radius: 10px;\n  display: block;\n  margin: auto;\n  box-shadow: 0 10px 8px -8px black;\n  background-color: white;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaperCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaperCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PaperCanvas.vue?vue&type=template&id=09070d28&scoped=true&\"\nimport script from \"./PaperCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./PaperCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PaperCanvas.vue?vue&type=style&index=0&id=09070d28&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09070d28\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <Nav ref=\"nav\"/>\r\n    <h1 class=\"subtitle\">{{ msg }}</h1>\r\n    <div class=\"tile is-ancestor\">\r\n      <div class=\"tile is-parent is-8\">\r\n        <div class=\"tile is-child box\">\r\n          <PaperCanvas :type=\"4\" :canvasId=\"'canvas-one'\" ref=\"c\" @message=\"getMessage\" @lock=\"lock=true\"\r\n                       @unlock=\"lock=false\" @goto=\"goto\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"tile is-vertical is-parent\">\r\n        <div class=\"tile is-child box\" style=\"min-height: 500px; height: 500px;\">\r\n          <div style=\"margin-top: 150px\">\r\n            <div v-for=\"(item) in text\" :key=\"item.message\">\r\n              <div v-if=\"item.highLight\">\r\n                <div class=\"block has-background-primary has-text-white\">\r\n                  {{ item.msg }}\r\n                </div>\r\n              </div>\r\n              <div v-else>\r\n                <div class=\"block mb-3\">\r\n                  {{ item.msg }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"tile is-child\">\r\n          <button class=\"button\" @click.left=\"addPoints\" :disabled=\"lock\"><strong> Add 10 </strong></button>\r\n          <button class=\"button\" @click.left=\"reset\" :disabled=\"lock\"><strong> Reset </strong></button>\r\n          <button class=\"button\" @click.left=\"last\" :disabled=\"lock\"><strong> Last </strong></button>\r\n          <button class=\"button\" @click.left=\"next\" :disabled=\"lock\"><strong> Next </strong></button>\r\n          <button v-if=\"clickAuto\" class=\"button is-primary\" @click.left=\"auto\"><strong> Auto </strong></button>\r\n          <button v-else class=\"button\" @click.left=\"auto\"><strong> Auto </strong></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"preface\">\r\n      <div class=\"modal is-active\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-card\" style=\"max-width: 500px\">\r\n          <header class=\"modal-card-head\">\r\n            <p class=\"modal-card-title\">Explanation</p>\r\n            <button class=\"delete\" aria-label=\"close\" @click.left=\"closePreface\"></button>\r\n          </header>\r\n          <section class=\"modal-card-body\">\r\n            <p class=\"content\"> You may feel it is redundant to check and compare each line's slope for each point pair\r\n              and yes, you are right. We can sort those points in a way so that we can efficiently compare them and\r\n              prune out some point pairs whose connections definitely could not be on the convex hull. Here is our next\r\n              algorithm, Graham Scan. It sorts all points one time and use linear time to go through those ordered\r\n              points and determine the convex hull in <strong>O(nlogn)</strong>.</p>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Nav from \"../components/Nav\";\r\nimport PaperCanvas from \"../components/PaperCanvas\";\r\n\r\nexport default {\r\n  components: {Nav, PaperCanvas},\r\n  name: \"GrahamScan\",\r\n  data() {\r\n    return {\r\n      msg: \"Please add more than three points on our canvas first.\",\r\n      preface: true,\r\n      lock: false,\r\n      currentIndex: -1,\r\n      clickAuto: false,\r\n      autoing: false,\r\n      text: [\r\n        {\r\n          msg: \"Sorting points by their X coordinate ascending\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Handling lower hull\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Pick last two elements in lower hull path, P1,P2, and next point from sorted point list as P3\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Is P1P2P3 turn left?\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Turn left! Add P3 to lower hull!\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Turn right! Pop out P2! Reevaluate P3!\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Finish lower hull\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Finish upper hull\",\r\n          highLight: false,\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    addPoints() {\r\n      this.autoing = false;\r\n      if (this.$refs.c.pointNum() > 200) {\r\n        this.msg = \"Max point number has been set to 200.\"\r\n        return;\r\n      }\r\n      if (this.$refs.c.randomGeneratePoints(10, 0, 800, 0, 600)) {\r\n        this.msg = \"Randomly add 10 points on canvas and all points have different x and y coordinates.\"\r\n      }\r\n    },\r\n    async last() {\r\n      if (!this.lock && this.currentIndex > 0) {\r\n        this.currentIndex = this.$refs.c.lastState();\r\n        for (let i = 0; i < this.text.length; i++) {\r\n          this.text[i].highLight = i === this.currentIndex;\r\n        }\r\n      }\r\n    },\r\n    async next() {\r\n      if (!this.lock && this.$refs.c.pointNum() > 3 && this.currentIndex < this.text.length - 1) {\r\n        let nextState = this.$refs.c.nextState();\r\n        if (nextState !== null) {\r\n          this.currentIndex = nextState;\r\n        } else {\r\n          if (this.currentIndex === 2) {\r\n            if (this.$refs.c.endOfCheck()) {\r\n              this.currentIndex = 6;\r\n            } else {\r\n              this.currentIndex = 3;\r\n            }\r\n          } else if (this.currentIndex === 3) {\r\n            if (this.$refs.c.currentTurn() < 0) {\r\n              this.currentIndex = 4;\r\n            } else {\r\n              this.currentIndex = 5;\r\n            }\r\n          } else if (this.currentIndex === 4) {\r\n            if (this.$refs.c.endOfCheck()) {\r\n              this.currentIndex = 6;\r\n            } else {\r\n              this.currentIndex = 2;\r\n            }\r\n          } else if (this.currentIndex === 5) {\r\n            this.currentIndex = 2;\r\n          } else {\r\n            this.currentIndex += 1;\r\n          }\r\n          await this.$refs.c.show(this.currentIndex);\r\n        }\r\n        for (let i = 0; i < this.text.length; i++) {\r\n          this.text[i].highLight = i === this.currentIndex;\r\n        }\r\n      }\r\n    },\r\n    async auto() {\r\n      let pointNum = this.$refs.c.pointNum();\r\n      let sleepPeriod = 100;\r\n      if(pointNum > 50) {\r\n        sleepPeriod = 30;\r\n      }else if(pointNum > 100) {\r\n        sleepPeriod = 5;\r\n      }\r\n      if (!this.lock && this.$refs.c.pointNum() > 3 && this.currentIndex < this.text.length - 1) {\r\n        this.autoing = !this.autoing;\r\n        if (this.autoing) {\r\n          this.clickAuto = true;\r\n          while (this.autoing) {\r\n            try {\r\n              await this.next();\r\n              if (this.$refs.c.endOfCheck()) {\r\n                break;\r\n              }\r\n            } catch (e) {\r\n              console.error(e);\r\n              break;\r\n            }\r\n            await new Promise(r => setTimeout(r, sleepPeriod));\r\n          }\r\n          this.clickAuto = false;\r\n          this.autoing = false;\r\n        }\r\n      }\r\n    },\r\n    async reset() {\r\n      this.currentIndex = -1;\r\n      for (let i = 0; i < this.text.length; i++) {\r\n        this.text[i].highLight = false;\r\n      }\r\n      this.msg = \"Please add more than three points on our canvas first.\";\r\n      await this.$refs.c.reset();\r\n    },\r\n    getMessage(msg) {\r\n      this.msg = msg;\r\n    },\r\n    goto(index) {\r\n      this.currentIndex = index - 1;\r\n    },\r\n    async closePreface() {\r\n      this.preface = false;\r\n      await this.reset();\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GrahamScan.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GrahamScan.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GrahamScan.vue?vue&type=template&id=29bebc36&scoped=true&\"\nimport script from \"./GrahamScan.vue?vue&type=script&lang=js&\"\nexport * from \"./GrahamScan.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29bebc36\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}