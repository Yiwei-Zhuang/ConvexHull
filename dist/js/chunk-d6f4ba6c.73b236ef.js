(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-d6f4ba6c"],{"71b8":function(t,e,n){"use strict";n("bc02")},"7f36":function(t,e,n){"use strict";n.r(e);var i=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("Nav",{ref:"nav"}),n("h1",{staticClass:"subtitle"},[t._v(t._s(t.msg))]),n("div",{staticClass:"tile is-ancestor"},[n("div",{staticClass:"tile is-parent is-8"},[n("div",{staticClass:"tile is-child box"},[n("PaperCanvas",{ref:"c",attrs:{type:4,canvasId:"canvas-one"},on:{message:t.getMessage,lock:function(e){t.lock=!0},unlock:function(e){t.lock=!1},goto:t.goto}})],1)]),n("div",{staticClass:"tile is-vertical is-parent"},[n("div",{staticClass:"tile is-child box",staticStyle:{"min-height":"500px",height:"500px"}},[n("div",{staticStyle:{"margin-top":"150px"}},t._l(t.text,(function(e){return n("div",{key:e.message},[e.highLight?n("div",[n("div",{staticClass:"block has-background-primary has-text-white"},[t._v(" "+t._s(e.msg)+" ")])]):n("div",[n("div",{staticClass:"block mb-3"},[t._v(" "+t._s(e.msg)+" ")])])])})),0)]),n("div",{staticClass:"tile is-child"},[n("button",{staticClass:"button",attrs:{disabled:t.lock},on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.addPoints.apply(null,arguments)}}},[n("strong",[t._v(" Add 10 ")])]),n("button",{staticClass:"button",attrs:{disabled:t.lock},on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.reset.apply(null,arguments)}}},[n("strong",[t._v(" Reset ")])]),n("button",{staticClass:"button",attrs:{disabled:t.lock},on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.last.apply(null,arguments)}}},[n("strong",[t._v(" Last ")])]),n("button",{staticClass:"button",attrs:{disabled:t.lock},on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.next.apply(null,arguments)}}},[n("strong",[t._v(" Next ")])]),t.clickAuto?n("button",{staticClass:"button is-primary",on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.auto.apply(null,arguments)}}},[n("strong",[t._v(" Auto ")])]):n("button",{staticClass:"button",on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.auto.apply(null,arguments)}}},[n("strong",[t._v(" Auto ")])])])])]),t.preface?n("div",[n("div",{staticClass:"modal is-active"},[n("div",{staticClass:"modal-background"}),n("div",{staticClass:"modal-card",staticStyle:{"max-width":"500px"}},[n("header",{staticClass:"modal-card-head"},[n("p",{staticClass:"modal-card-title"},[t._v("Explanation")]),n("button",{staticClass:"delete",attrs:{"aria-label":"close"},on:{click:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"left",37,e.key,["Left","ArrowLeft"])||"button"in e&&0!==e.button?null:t.closePreface.apply(null,arguments)}}})]),t._m(0)])])]):t._e()],1)},s=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("section",{staticClass:"modal-card-body"},[n("p",{staticClass:"content"},[t._v(" You may feel it is redundant to check and compare each line's slope for each point pair and yes, you are right. We can sort those points in a way so that we can efficiently compare them and prune out some point pairs whose connections definitely could not be on the convex hull. Here is our next algorithm, Graham Scan. It sorts all points one time and use linear time to go through those ordered points and determine the convex hull in "),n("strong",[t._v("O(nlogn)")]),t._v(".")])])}],o=n("1da1"),a=(n("d3b7"),n("96cf"),n("216c")),r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("canvas",{ref:"cs",staticClass:"canvas-style",attrs:{id:t.canvasId}})])},l=[],h=n("3835"),c=(n("4fad"),n("a434"),n("ac1f"),n("fb6a"),n("4e82"),n("4b7c")),u=n("26a8"),d=n("2222"),p="#ee9a33",f="#ff3860",g={name:"PaperCanvas",props:["canvasId","type"],data:function(){return{path:null,scope:null,tool:null,GLOBAL_CANVAS_WIDTH:800,GLOBAL_CANVAS_HEIGHT:600,points:[],pointPathMap:{},sortedPoints:[],addPoints:!0,convexHullList:[],convexHullPath:null,displayPath:null,displayPointList:[],searchAreaPath:null,states:[],step:-1,type4PointIndex:0}},created:function(){},mounted:function(){this.scope=new d.PaperScope,this.scope.setup(this.canvasId),this.tool=this.createTool(this.scope),this.displayPath=new d.Path({strokeColor:"#000000"}),4===this.type?this.initType4():alert("E-Doz")},methods:{createTool:function(t){return t.activate(),new d.Tool},drawPoint:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#000000";t.activate();var s=new d.Path.Circle(new d.Point(e.x,e.y),n);return s.fillColor=i,s},reset:function(){for(var t=0,e=Object.entries(this.pointPathMap);t<e.length;t++){var n=Object(h["a"])(e[t],2),i=n[1];i.removeSegments()}this.pointPathMap={},this.points=[],this.sortedPoints=[],this.addPoints=!0,this.convexHullList=[],this.convexHullPath&&this.convexHullPath.removeSegments(),this.convexHullPath=null,this.resetDisplay(),this.states=[],this.step=-1,this.type4PointIndex=0},resetDisplay:function(){for(var t=0;t<this.points.length;t++)this.getPointPath(this.points[t]).fillColor="#000000";this.displayPath&&this.displayPath.removeSegments(),this.displayPath=new d.Path({strokeColor:"#000000"}),this.displayPointList=[],null!=this.type5LeftPath&&(this.type5LeftPath.removeSegments(),this.type5LeftPath=null),null!=this.type5RightPath&&(this.type5RightPath.removeSegments(),this.type5RightPath=null),null!=this.searchAreaPath&&(this.searchAreaPath.removeSegments(),this.searchAreaPath=null)},p2c:function(t){return new d.Point(t.x,Math.floor(this.GLOBAL_CANVAS_HEIGHT-t.y))},sendMessage:function(t){this.$emit("message",t)},randomGeneratePoints:function(t,e,n,i,s){if(this.addPoints){var o=[],a=[];n>this.GLOBAL_CANVAS_WIDTH&&(n=this.GLOBAL_CANVAS_WIDTH),s>this.GLOBAL_CANVAS_HEIGHT&&(s=this.GLOBAL_CANVAS_HEIGHT);for(var r=e;r<n;r++)o.push(r);for(var l=i;l<s;l++)a.push(l);for(var h=0;h<this.points.length;h++){var c=o.indexOf(this.points[h].x),d=a.indexOf(this.points[h].y);-1!==c&&o.splice(c,1),-1!==d&&a.splice(d,1)}for(var p=0;p<t;p++){var f=u["a"].getRandomArbitrary(0,o.length-1),g=u["a"].getRandomArbitrary(0,a.length-1),P=o[f],y=a[g];o.splice(f,1),a.splice(g,1);var x=P+","+y;this.points.push({x:P,y:y}),this.pointPathMap[x]=this.drawPoint(this.scope,this.p2c({x:P,y:y}),10)}return!0}return!1},pointNum:function(){return this.points.length},getPointPath:function(t){return this.pointPathMap[t.x+","+t.y]},currentTurn:function(){if(this.displayPointList.length<2)return-1;var t=this.displayPointList[this.displayPointList.length-2],e=this.displayPointList[this.displayPointList.length-1],n=this.sortedPoints[this.type4PointIndex];return u["a"].orient(t,e,n)},endOfCheck:function(){return this.sortedPoints.length>0&&this.type4PointIndex>=this.sortedPoints.length},saveState:function(t,e){for(var n=[],i=[],s=0;s<this.points.length;s++)n.push(this.getPointPath(this.points[s]).fillColor);for(var o=this.displayPath.segments,a=0;a<o.length;a++)i.push({x:o[a].point.x,y:o[a].point.y});this.states.push({message:e,index:t,type4PointIndex:this.type4PointIndex,pointsColor:n,displayPointList:this.displayPointList,displayPathPoints:i})},readState:function(t){var e=this.states[t];if(e){this.resetDisplay(),this.type4PointIndex=e.type4PointIndex;for(var n=e.pointsColor,i=0;i<this.points.length;i++)this.getPointPath(this.points[i]).fillColor=n[i];for(var s=e.displayPathPoints,o=0;o<s.length;o++)this.displayPath.add(s[o]);return this.displayPointList=e.displayPointList,this.sendMessage(e.message),e.index}},nextState:function(){return this.step+1<this.states.length?(this.step++,this.readState(this.step)):null},lastState:function(){return this.step-1>=0?(this.step--,this.readState(this.step)):null},initType4:function(){var t=this;this.tool.onMouseDown=function(e){if(t.addPoints){if(t.pointNum()>200)return void t.sendMessage("Max point number has been set to 200.");var n=t.p2c(e.point);n.x=Math.floor(n.x),n.y=Math.floor(n.y);for(var i=0;i<t.points.length;i++)if(t.points[i].x===n.x||t.points[i].y===n.y)return;t.points.push({x:n.x,y:n.y}),t.pointPathMap[n.x+","+n.y]=t.drawPoint(t.scope,t.p2c({x:n.x,y:n.y}),10)}}},show:function(t){var e=this;return Object(o["a"])(regeneratorRuntime.mark((function n(){var i,s,o,a,r,l,h,u,g,P,y,x,v;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.$emit("lock"),4===e.type)if(i="",e.addPoints=!1,e.convexHullList.length<3&&(e.convexHullList=c["a"].exec(e.points)),e.step++,e.step<e.states.length)e.readState(e.step);else{if(e.readState(e.step-1),0===t)for(i="Point color becomes darker as its x coordinate increasing.",s=e.points.slice(),s.sort((function(t,e){var n=t.x,i=e.x;return n===i&&(e.x+=1e-5),n<i?-1:n>i?1:void 0})),e.sortedPoints=s.slice(),o=0;o<s.length;o++)a=e.pointPathMap[s[o].x+","+s[o].y],a.opacity=(1-(s.length-o)/s.length)/2+.3;else if(1===t)i="Initialize lower hull by adding first two points from sorted point list to lower hull path.",r=e.p2c(e.sortedPoints[0]),l=e.p2c(e.sortedPoints[1]),e.displayPath.add(new d.Point(r.x,r.y)),e.displayPath.add(new d.Point(l.x,l.y)),e.displayPointList.push(e.sortedPoints[0],e.sortedPoints[1]),e.type4PointIndex=2;else if(2===t)e.displayPointList.length<2?(i="Because there are only one point in lower hull path, we can directly add P3 to the lower hull path and check next point.",e.displayPointList.push(e.sortedPoints[e.type4PointIndex]),e.displayPath.add(e.p2c(e.sortedPoints[e.type4PointIndex])),e.type4PointIndex++):i="Yellow points are P1, P2; Red point is P3.",h=e.displayPointList[e.displayPointList.length-2],u=e.displayPointList[e.displayPointList.length-1],e.getPointPath(h).fillColor=p,e.getPointPath(u).fillColor=p,e.endOfCheck()?i="There are only two possible points could be on lower hull, so we have nothing need to do but connect them.":(g=e.sortedPoints[e.type4PointIndex],e.getPointPath(g).fillColor=f);else if(3===t)i="Connect P1 P2 P3 in order.",P=e.sortedPoints[e.type4PointIndex],e.displayPath.add(e.p2c(P));else if(4===t)i="Here is partial lower hull.",y=e.sortedPoints[e.type4PointIndex],e.getPointPath(y).fillColor=p,e.displayPointList.push(y),e.type4PointIndex++;else if(5===t)i="Remove P2 in convex hull path for the reason it is above line segment P1P3.",x=e.displayPointList.pop(),e.getPointPath(x).fillColor="#000000",e.displayPath.removeSegment(e.displayPath.segments.length-1),e.displayPath.removeSegment(e.displayPath.segments.length-1);else if(6===t)i="The algorithm has almost been finished since the algorithm for lower hull can be used for upper hull if we rotate the whole graph 180 degree.";else if(7===t){for(i="Great! We found all points on convex hull in CCW order.",e.resetDisplay(),v=0;v<e.convexHullList.length;v++)e.getPointPath(e.convexHullList[v]).fillColor=p,e.displayPath.add(e.p2c(e.convexHullList[v]));e.displayPath.add(e.p2c(e.convexHullList[0]))}e.sendMessage(i),e.saveState(t,i)}e.$emit("unlock");case 3:case"end":return n.stop()}}),n)})))()}}},P=g,y=(n("71b8"),n("2877")),x=Object(y["a"])(P,r,l,!1,null,"09070d28",null),v=x.exports,m={components:{Nav:a["a"],PaperCanvas:v},name:"GrahamScan",data:function(){return{msg:"Please add more than three points on our canvas first.",preface:!0,lock:!1,currentIndex:-1,clickAuto:!1,autoing:!1,text:[{msg:"Sorting points by their X coordinate ascending",highLight:!1},{msg:"Handling lower hull",highLight:!1},{msg:"Pick last two elements in lower hull path, P1,P2, and next point from sorted point list as P3",highLight:!1},{msg:"Is P1P2P3 turn left?",highLight:!1},{msg:"Turn left! Add P3 to lower hull!",highLight:!1},{msg:"Turn right! Pop out P2! Reevaluate P3!",highLight:!1},{msg:"Finish lower hull",highLight:!1},{msg:"Finish upper hull",highLight:!1}]}},mounted:function(){},methods:{addPoints:function(){this.autoing=!1,this.$refs.c.pointNum()>200?this.msg="Max point number has been set to 200.":this.$refs.c.randomGeneratePoints(10,0,800,0,600)&&(this.msg="Randomly add 10 points on canvas and all points have different x and y coordinates.")},last:function(){var t=this;return Object(o["a"])(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(!t.lock&&t.currentIndex>0)for(t.currentIndex=t.$refs.c.lastState(),n=0;n<t.text.length;n++)t.text[n].highLight=n===t.currentIndex;case 1:case"end":return e.stop()}}),e)})))()},next:function(){var t=this;return Object(o["a"])(regeneratorRuntime.mark((function e(){var n,i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(!(!t.lock&&t.$refs.c.pointNum()>3&&t.currentIndex<t.text.length-1)){e.next=10;break}if(n=t.$refs.c.nextState(),null===n){e.next=6;break}t.currentIndex=n,e.next=9;break;case 6:return 2===t.currentIndex?t.$refs.c.endOfCheck()?t.currentIndex=6:t.currentIndex=3:3===t.currentIndex?t.$refs.c.currentTurn()<0?t.currentIndex=4:t.currentIndex=5:4===t.currentIndex?t.$refs.c.endOfCheck()?t.currentIndex=6:t.currentIndex=2:5===t.currentIndex?t.currentIndex=2:t.currentIndex+=1,e.next=9,t.$refs.c.show(t.currentIndex);case 9:for(i=0;i<t.text.length;i++)t.text[i].highLight=i===t.currentIndex;case 10:case"end":return e.stop()}}),e)})))()},auto:function(){var t=this;return Object(o["a"])(regeneratorRuntime.mark((function e(){var n,i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(n=t.$refs.c.pointNum(),i=100,n>50?i=30:n>100&&(i=5),!(!t.lock&&t.$refs.c.pointNum()>3&&t.currentIndex<t.text.length-1)){e.next=25;break}if(t.autoing=!t.autoing,!t.autoing){e.next=25;break}t.clickAuto=!0;case 7:if(!t.autoing){e.next=23;break}return e.prev=8,e.next=11,t.next();case 11:if(!t.$refs.c.endOfCheck()){e.next=13;break}return e.abrupt("break",23);case 13:e.next=19;break;case 15:return e.prev=15,e.t0=e["catch"](8),console.error(e.t0),e.abrupt("break",23);case 19:return e.next=21,new Promise((function(t){return setTimeout(t,i)}));case 21:e.next=7;break;case 23:t.clickAuto=!1,t.autoing=!1;case 25:case"end":return e.stop()}}),e,null,[[8,15]])})))()},reset:function(){var t=this;return Object(o["a"])(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:for(t.currentIndex=-1,n=0;n<t.text.length;n++)t.text[n].highLight=!1;return t.msg="Please add more than three points on our canvas first.",e.next=5,t.$refs.c.reset();case 5:case"end":return e.stop()}}),e)})))()},getMessage:function(t){this.msg=t},goto:function(t){this.currentIndex=t-1},closePreface:function(){var t=this;return Object(o["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return t.preface=!1,e.next=3,t.reset();case 3:case"end":return e.stop()}}),e)})))()}}},b=m,k=Object(y["a"])(b,i,s,!1,null,"29bebc36",null);e["default"]=k.exports},bc02:function(t,e,n){}}]);
//# sourceMappingURL=chunk-d6f4ba6c.73b236ef.js.map