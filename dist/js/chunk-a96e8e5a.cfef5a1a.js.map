{"version":3,"sources":["webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./src/algorithm/MergeHull.js","webpack:///./src/views/MergeHull.vue?1453","webpack:///./src/components/MergeHullCanvas.vue?f034","webpack:///src/components/MergeHullCanvas.vue","webpack:///./src/components/MergeHullCanvas.vue?8d78","webpack:///./src/components/MergeHullCanvas.vue","webpack:///src/views/MergeHull.vue","webpack:///./src/views/MergeHull.vue?1ac1","webpack:///./src/views/MergeHull.vue","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./src/components/MergeHullCanvas.vue?55e6"],"names":["uncurryThis","module","exports","valueOf","requireObjectCoercible","toString","whitespaces","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","start","end","trim","isCallable","isObject","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","prototype","a","DIVIDE","BRUTAL","MERGE","CONNECT_TANGENT","LEFT","RIGHT","nextPointIndex","pl","index","retIndex","length","previousPointIndex","rightMostPointIndex","rightMostX","rightMostXIndex","i","x","leftMostPointIndex","leftMostX","Number","MAX_VALUE","leftMostXIndex","mergeSubHull","pointList1","pointList2","process","pl1MinX","pl1MaxX","pl2MinX","pl2MaxX","grahamScan","exec","push","type","points","slice","part","xMin","xMax","message","mid","Math","floor","leftPart","rightPart","left","right","pl1RightMostIndex","pl2LeftMostIndex","upperTangentLeftIndex","upperTangentRightIndex","nextLeftPointIndex","algoTool","orient","previousRightPointIndex","lowerTangentLeftIndex","lowerTangentRightIndex","nextRightPointIndex","previousLeftPointIndex","leftPointList","rightPointList","leftFlag","rightFlag","apply","whole","pointList","sort","p1","p2","x1","x2","result","render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","_v","_s","msg","attrs","on","getMessage","$event","lock","staticStyle","_l","item","key","indexOf","_k","keyCode","button","addPoints","arguments","reset","last","next","auto","closePreface","_m","_e","staticRenderFns","canvasId","name","props","data","created","mounted","scope","setup","tool","createTool","displayPath","strokeColor","init","methods","activate","drawPoint","path","fillColor","c","onMouseDown","clickPoint","y","value","removeSegments","pointPathMap","sortedPoints","convexHullList","convexHullPath","resetDisplay","states","step","getPointPath","displayPointList","leftPath","rightPath","searchAreaPath","p2c","displaySearchArea","danger","strokeWidth","add","sendMessage","$emit","randomGeneratePoints","GLOBAL_CANVAS_WIDTH","yMax","GLOBAL_CANVAS_HEIGHT","xArray","yArray","xIndex","splice","yIndex","tempXIndex","tempYIndex","pointNum","point","readState","state","j","leftColor","color","nextState","lastState","prepare","mergeHullResult","circle","opacity","component","components","preface","currentIndex","clickAuto","autoing","text","$refs","DESCRIPTORS","global","isForced","redefine","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","thisNumberValue","NUMBER","NativeNumber","NumberPrototype","TypeError","arraySlice","charCodeAt","toNumeric","primValue","toNumber","argument","first","third","radix","maxCode","digits","code","it","NaN","parseInt","NumberWrapper","n","Object","keys","split"],"mappings":"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","file":"js/chunk-a96e8e5a.cfef5a1a.js","sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = uncurryThis(1.0.valueOf);\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","import algoTool from \"./AlgoTools\";\r\nimport grahamScan from \"./GrahamScan\";\r\n\r\nlet a = 1;\r\nconst DIVIDE = 1;\r\nconst BRUTAL = 2;\r\nconst MERGE = 3;\r\nconst CONNECT_TANGENT = 4;\r\nconst LEFT = 0;\r\nconst RIGHT = 1;\r\n\r\nfunction nextPointIndex(pl, index) {\r\n    let retIndex = index + 1;\r\n    if (retIndex === pl.length) {\r\n        retIndex = 0;\r\n    }\r\n    return retIndex;\r\n}\r\n\r\nfunction previousPointIndex(pl, index) {\r\n    let retIndex = index - 1;\r\n    if (retIndex === -1) {\r\n        retIndex = pl.length - 1;\r\n    }\r\n    return retIndex;\r\n}\r\n\r\nfunction rightMostPointIndex(pl) {\r\n    let rightMostX = -1; // Start at (0,0)\r\n    let rightMostXIndex = -1;\r\n    for (let i = 0; i < pl.length; i++) {\r\n        if (pl[i].x > rightMostX) {\r\n            rightMostX = pl[i].x;\r\n            rightMostXIndex = i;\r\n        }\r\n    }\r\n    return rightMostXIndex;\r\n}\r\n\r\nfunction leftMostPointIndex(pl) {\r\n    let leftMostX = Number.MAX_VALUE;\r\n    let leftMostXIndex = Number.MAX_VALUE;\r\n    for (let i = 0; i < pl.length; i++) {\r\n        if (pl[i].x < leftMostX) {\r\n            leftMostX = pl[i].x;\r\n            leftMostXIndex = i;\r\n        }\r\n    }\r\n    return leftMostXIndex;\r\n}\r\n\r\nfunction mergeSubHull(pointList1, pointList2, process) {\r\n    let pl1MinX = pointList1[leftMostPointIndex(pointList1)].x;\r\n    let pl1MaxX = pointList1[rightMostPointIndex(pointList1)].x\r\n    let pl2MinX = pointList2[leftMostPointIndex(pointList2)].x;\r\n    let pl2MaxX = pointList2[rightMostPointIndex(pointList2)].x\r\n    if (pointList1.length < 6) {\r\n        pointList1 = grahamScan.exec(pointList1);\r\n        process.push({\r\n            type: BRUTAL,\r\n            points: pointList1.slice(),\r\n            part: LEFT,\r\n            xMin: pl1MinX,\r\n            xMax: pl2MaxX,\r\n            message: \"Use any way you like to find the convex hull for this small point set.\",\r\n        })\r\n    } else {\r\n        let mid = Math.floor(pointList1.length / 2);\r\n        let leftPart = pointList1.slice(0, mid);\r\n        let rightPart = pointList1.slice(mid, pointList1.length);\r\n        process.push({\r\n            type: DIVIDE,\r\n            left: leftPart.slice(),\r\n            right: rightPart.slice(),\r\n            mid: pointList1[mid],\r\n            xMin: pl1MinX,\r\n            xMax: pl1MaxX,\r\n            message: \"Divide current sub-point set into left part and right part.\",\r\n        })\r\n        pointList1 = mergeSubHull(leftPart, rightPart, process);\r\n    }\r\n    if (pointList2.length < 6) {\r\n        pointList2 = grahamScan.exec(pointList2);\r\n        process.push({\r\n            type: BRUTAL,\r\n            points: pointList2.slice(),\r\n            part: RIGHT,\r\n            xMin:pl1MinX,\r\n            xMax: pl2MaxX,\r\n            message: \"Use any way you like to find the convex hull for this small point set.\",\r\n        })\r\n    } else {\r\n        let mid = Math.floor(pointList2.length / 2);\r\n        let leftPart = pointList2.slice(0, mid);\r\n        let rightPart = pointList2.slice(mid, pointList2.length);\r\n        process.push({\r\n            type: DIVIDE,\r\n            left: leftPart.slice(),\r\n            right: rightPart.slice(),\r\n            mid: pointList2[mid],\r\n            xMin: pl2MinX,\r\n            xMax: pl2MaxX,\r\n            message: \"Divide current sub-point set into left part and right part.\",\r\n        })\r\n        pointList2 = mergeSubHull(leftPart, rightPart, process);\r\n    }\r\n    let pl1RightMostIndex = rightMostPointIndex(pointList1);\r\n    let pl2LeftMostIndex = leftMostPointIndex(pointList2);\r\n    process.push({\r\n        type: MERGE, // Ready to merge two parts\r\n        left: pointList1.slice(),\r\n        right: pointList2.slice(),\r\n        xMin: pl1MinX,\r\n        xMax: pl2MaxX,\r\n        message: \"Left and right parts' convex hull has been constructed.\",\r\n    })\r\n    // Find upper tangent\r\n    let upperTangentLeftIndex = pl1RightMostIndex;\r\n    let upperTangentRightIndex = pl2LeftMostIndex;\r\n    while (a === 1) {\r\n        let nextLeftPointIndex = nextPointIndex(pointList1, upperTangentLeftIndex);\r\n        while (algoTool.orient(pointList2[upperTangentRightIndex], pointList1[upperTangentLeftIndex], pointList1[nextLeftPointIndex]) > 0) {\r\n            upperTangentLeftIndex = nextLeftPointIndex;\r\n            nextLeftPointIndex = nextPointIndex(pointList1, upperTangentLeftIndex);\r\n        }\r\n        let previousRightPointIndex = previousPointIndex(pointList2, upperTangentRightIndex);\r\n        while (algoTool.orient(pointList2[previousRightPointIndex], pointList2[upperTangentRightIndex], pointList1[upperTangentLeftIndex]) > 0) {\r\n            upperTangentRightIndex = previousRightPointIndex;\r\n            previousRightPointIndex = previousPointIndex(pointList2, upperTangentRightIndex);\r\n        }\r\n        if (algoTool.orient(pointList2[upperTangentRightIndex], pointList1[upperTangentLeftIndex], pointList1[nextLeftPointIndex]) < 0) {\r\n            break;\r\n        }\r\n    }\r\n    // Find lower tangent\r\n    let lowerTangentLeftIndex = pl1RightMostIndex;\r\n    let lowerTangentRightIndex = pl2LeftMostIndex;\r\n    while (a === 1) {\r\n        let nextRightPointIndex = nextPointIndex(pointList2, lowerTangentRightIndex);\r\n        while (algoTool.orient(pointList1[lowerTangentLeftIndex], pointList2[lowerTangentRightIndex], pointList2[nextRightPointIndex]) > 0) {\r\n            lowerTangentRightIndex = nextRightPointIndex;\r\n            nextRightPointIndex = nextPointIndex(pointList2, lowerTangentRightIndex);\r\n        }\r\n        let previousLeftPointIndex = previousPointIndex(pointList1, lowerTangentLeftIndex);\r\n        while (algoTool.orient(pointList1[previousLeftPointIndex], pointList1[lowerTangentLeftIndex], pointList2[lowerTangentRightIndex]) > 0) {\r\n            lowerTangentLeftIndex = previousLeftPointIndex;\r\n            previousLeftPointIndex = previousPointIndex(pointList1, lowerTangentLeftIndex);\r\n        }\r\n        if (algoTool.orient(pointList1[lowerTangentLeftIndex], pointList2[lowerTangentRightIndex], pointList2[nextRightPointIndex]) < 0) {\r\n            break;\r\n        }\r\n    }\r\n    // Merge two point lists\r\n    let leftPointList = [];\r\n    let rightPointList = [];\r\n    let leftFlag = false;\r\n    let rightFlag = false;\r\n    for (let i = upperTangentLeftIndex; i < pointList1.length; i++) {\r\n        leftPointList.push(pointList1[i]);\r\n        if (i === lowerTangentLeftIndex) {\r\n            leftFlag = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!leftFlag) {\r\n        for (let i = 0; i <= lowerTangentLeftIndex; i++) {\r\n            leftPointList.push(pointList1[i]);\r\n        }\r\n    }\r\n    for (let i = lowerTangentRightIndex; i < pointList2.length; i++) {\r\n        rightPointList.push(pointList2[i]);\r\n        if (i === upperTangentRightIndex) {\r\n            rightFlag = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!rightFlag) {\r\n        for (let i = 0; i <= upperTangentRightIndex; i++) {\r\n            rightPointList.push(pointList2[i]);\r\n        }\r\n    }\r\n    leftPointList.push.apply(leftPointList, rightPointList);\r\n    process[process.length - 1].whole = leftPointList.slice();\r\n    process.push({\r\n        type: CONNECT_TANGENT,\r\n        points: leftPointList,\r\n        xMin: pl1MinX,\r\n        xMax: pl2MaxX,\r\n        message: \"Connect tangent lines in linear time.\",\r\n    })\r\n    return leftPointList;\r\n}\r\n\r\nexport default {\r\n    exec(pointList) {\r\n        if (pointList.length < 4) {\r\n            return pointList;\r\n        }\r\n        // Sort point list by x-coordinate\r\n        pointList.sort(function (p1, p2) {\r\n            let x1 = p1.x\r\n            let x2 = p2.x;\r\n            if (x1 === x2) {\r\n                p2.x += 0.00001;\r\n            }\r\n            if (x1 < x2) {\r\n                return -1;\r\n            }\r\n            if (x1 > x2) {\r\n                return 1;\r\n            }\r\n        });\r\n        let mid = Math.floor(pointList.length / 2);\r\n        let leftPart = pointList.slice(0, mid);\r\n        let rightPart = pointList.slice(mid, pointList.length);\r\n        let process = [{\r\n            type: DIVIDE, // divide\r\n            left: leftPart.slice(),\r\n            right: rightPart.slice(),\r\n            mid: pointList[mid],\r\n            xMin: pointList[0].x,\r\n            xMax: pointList[pointList.length - 1].x,\r\n            message: \"Divide current sub-point set into left part and right part.\",\r\n        }];\r\n        let result = mergeSubHull(leftPart, rightPart, process)\r\n        return {\r\n            result: result,\r\n            process: process\r\n        };\r\n    },\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Nav',{ref:\"nav\"}),_c('h1',{staticClass:\"subtitle\"},[_vm._v(_vm._s(_vm.msg))]),_c('div',{staticClass:\"tile is-ancestor\"},[_c('div',{staticClass:\"tile is-parent is-8\"},[_c('div',{staticClass:\"tile is-child box\"},[_c('MergeHullCanvas',{ref:\"c\",attrs:{\"canvasId\":'canvas-one'},on:{\"message\":_vm.getMessage,\"lock\":function($event){_vm.lock=true},\"unlock\":function($event){_vm.lock=false}}})],1)]),_c('div',{staticClass:\"tile is-vertical is-parent\"},[_c('div',{staticClass:\"tile is-child box\",staticStyle:{\"min-height\":\"500px\",\"height\":\"500px\"}},[_c('div',{staticStyle:{\"margin-top\":\"150px\"}},_vm._l((_vm.text),function(item){return _c('div',{key:item.message},[(item.highLight)?_c('div',[_c('div',{staticClass:\"block has-background-primary has-text-white\"},[_vm._v(\" \"+_vm._s(item.msg)+\" \")])]):_c('div',[_c('div',{staticClass:\"block mb-3\"},[_vm._v(\" \"+_vm._s(item.msg)+\" \")])])])}),0)]),_c('div',{staticClass:\"tile is-child\"},[_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.addPoints.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Add 10 \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.reset.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Reset \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.last.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Last \")])]),_c('button',{staticClass:\"button\",attrs:{\"disabled\":_vm.lock},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.next.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Next \")])]),(_vm.clickAuto)?_c('button',{staticClass:\"button is-primary\",on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.auto.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Auto \")])]):_c('button',{staticClass:\"button\",on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.auto.apply(null, arguments)}}},[_c('strong',[_vm._v(\" Auto \")])])])])]),(_vm.preface)?_c('div',[_c('div',{staticClass:\"modal is-active\"},[_c('div',{staticClass:\"modal-background\"}),_c('div',{staticClass:\"modal-card\",staticStyle:{\"max-width\":\"500px\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"Explanation\")]),_c('button',{staticClass:\"delete\",attrs:{\"aria-label\":\"close\"},on:{\"click\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }return _vm.closePreface.apply(null, arguments)}}})]),_vm._m(0)])])]):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"modal-card-body\"},[_c('p',{staticClass:\"content\"},[_vm._v(\" With the idea of pre-sort the point set, there is another algorithm called Merge Hull which also can determine the convex hull in \"),_c('strong',[_vm._v(\"O(nlogn)\")]),_vm._v(\" by divide and conquer the point set. Merge Hull algorithm divides the point set into left and right part and each part will be divided again till there is only few points left in the part such as 4 or 5 points. Since there is only few point, we can use brutal force to compute the little convex hull in constant time. For the conquer part, the algorithm will pick left and right parts that have already got convex hulls and try to connect two parts with upper and lower tangent lines. One way to find such tangent lines is starting with right most point on left convex hull and left most point on right convex hull and check points in CCW direction. Then, with the property of \\\"left turn\\\" in convex hull, we are going to make sure the connection of left and right convex hull is always turning left. After we merge all partial convex hulls, the final result is exactly the convex hull for the whole point set.\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{ref:\"cs\",staticClass:\"canvas-style\",attrs:{\"id\":_vm.canvasId}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <canvas ref=\"cs\" :id=\"canvasId\" class=\"canvas-style\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport paper from \"paper\";\r\nimport mergeHull from \"../algorithm/MergeHull\";\r\nimport algoTools from \"../algorithm/AlgoTools\";\r\n\r\nconst primary = \"#00d1b2\";\r\nconst link = \"#3273dc\";\r\nconst complete = \"#ee9a33\";\r\nconst danger = \"#ff3860\";\r\n\r\n\r\nexport default {\r\n  name: \"MergeHullCanvas\",\r\n  props: ['canvasId'],\r\n  data: () => ({\r\n    path: null,\r\n    scope: null,\r\n    tool: null,\r\n    GLOBAL_CANVAS_WIDTH: 800,\r\n    GLOBAL_CANVAS_HEIGHT: 600,\r\n    points: [],\r\n    pointPathMap: {},\r\n    sortedPoints: [],\r\n    addPoints: true,\r\n    convexHullList: [],\r\n    convexHullPath: null,\r\n    displayPath: null,\r\n    displayPointList: [],\r\n    searchAreaPath: null,\r\n    states: [],\r\n    step: -1,\r\n    leftPath: null,\r\n    rightPath: null,\r\n  }),\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    this.scope = new paper.PaperScope();\r\n    this.scope.setup(this.canvasId);\r\n    this.tool = this.createTool(this.scope);\r\n    this.displayPath = new paper.Path({\r\n      strokeColor: \"#000000\",\r\n    });\r\n    this.init();\r\n  },\r\n  methods: {\r\n    createTool(scope) {\r\n      scope.activate();\r\n      return new paper.Tool();\r\n    },\r\n    drawPoint(scope, p, r, c = \"#000000\") {\r\n      scope.activate();\r\n      let path = new paper.Path.Circle(new paper.Point(p.x, p.y), r);\r\n      path.fillColor = c;\r\n      return path;\r\n    },\r\n    init() {\r\n      this.tool.onMouseDown = (event) => {\r\n        if (this.addPoints) {\r\n          if (this.pointNum() > 200) {\r\n            this.sendMessage(\"Max point number has been set to 200.\");\r\n            return;\r\n          }\r\n          let clickPoint = this.p2c(event.point);\r\n          clickPoint.x = Math.floor(clickPoint.x);\r\n          clickPoint.y = Math.floor(clickPoint.y);\r\n          for (let i = 0; i < this.points.length; i++) {\r\n            if (this.points[i].x === clickPoint.x || this.points[i].y === clickPoint.y) {\r\n              return;\r\n            }\r\n          }\r\n          this.points.push({x: clickPoint.x, y: clickPoint.y});\r\n          this.pointPathMap[clickPoint.x + \",\" + clickPoint.y] = this.drawPoint(this.scope, this.p2c({\r\n            x: clickPoint.x,\r\n            y: clickPoint.y\r\n          }), 10);\r\n        }\r\n      }\r\n    },\r\n    reset() {\r\n      for (const [, value] of Object.entries(this.pointPathMap)) {\r\n        value.removeSegments();\r\n      }\r\n      this.pointPathMap = {};\r\n      this.points = [];\r\n      this.sortedPoints = [];\r\n      this.addPoints = true;\r\n      this.convexHullList = [];\r\n      if (this.convexHullPath) {\r\n        this.convexHullPath.removeSegments();\r\n      }\r\n      this.convexHullPath = null;\r\n      this.resetDisplay();\r\n      this.states = [];\r\n      this.step = -1;\r\n    },\r\n    resetDisplay() {\r\n      for (let i = 0; i < this.points.length; i++) {\r\n        this.getPointPath(this.points[i]).fillColor = \"#000000\";\r\n      }\r\n      if (this.displayPath) {\r\n        this.displayPath.removeSegments();\r\n      }\r\n      this.displayPath = new paper.Path({\r\n        strokeColor: \"#000000\",\r\n      });\r\n      this.displayPointList = [];\r\n      if (this.leftPath != null) {\r\n        this.leftPath.removeSegments();\r\n        this.leftPath = null;\r\n      }\r\n      if (this.rightPath != null) {\r\n        this.rightPath.removeSegments();\r\n        this.rightPath = null;\r\n      }\r\n      if (this.searchAreaPath != null) {\r\n        this.searchAreaPath.removeSegments();\r\n        this.searchAreaPath = null;\r\n      }\r\n    },\r\n    p2c(p) {\r\n      return new paper.Point(p.x, Math.floor(this.GLOBAL_CANVAS_HEIGHT - p.y));\r\n    },\r\n    displaySearchArea(xMin, xMax) {\r\n      this.searchAreaPath = new paper.Path({\r\n        strokeColor: danger,\r\n        strokeWidth: 3,\r\n      });\r\n      this.searchAreaPath.add({x: xMin, y: 0});\r\n      this.searchAreaPath.add({x: xMin, y: this.GLOBAL_CANVAS_HEIGHT});\r\n      this.searchAreaPath.add({x: xMax, y: this.GLOBAL_CANVAS_HEIGHT});\r\n      this.searchAreaPath.add({x: xMax, y: 0});\r\n      this.searchAreaPath.add({x: xMin, y: 0});\r\n    },\r\n    sendMessage(msg) {\r\n      this.$emit(\"message\", msg);\r\n    },\r\n    randomGeneratePoints(pointsNum, xMin, xMax, yMin, yMax) {\r\n      // X and Y coordinates are without repetitions.\r\n      if (this.addPoints) {\r\n        let xArray = [];\r\n        let yArray = [];\r\n        if (xMax > this.GLOBAL_CANVAS_WIDTH) {\r\n          xMax = this.GLOBAL_CANVAS_WIDTH;\r\n        }\r\n        if (yMax > this.GLOBAL_CANVAS_HEIGHT) {\r\n          yMax = this.GLOBAL_CANVAS_HEIGHT;\r\n        }\r\n        for (let i = xMin; i < xMax; i++) {\r\n          xArray.push(i);\r\n        }\r\n        for (let i = yMin; i < yMax; i++) {\r\n          yArray.push(i);\r\n        }\r\n        for (let i = 0; i < this.points.length; i++) {\r\n          let xIndex = xArray.indexOf(this.points[i].x);\r\n          let yIndex = yArray.indexOf(this.points[i].y);\r\n          if (xIndex !== -1) {\r\n            xArray.splice(xIndex, 1);\r\n          }\r\n          if (yIndex !== -1) {\r\n            yArray.splice(yIndex, 1);\r\n          }\r\n        }\r\n        for (let i = 0; i < pointsNum; i++) {\r\n          let tempXIndex = algoTools.getRandomArbitrary(0, xArray.length - 1);\r\n          let tempYIndex = algoTools.getRandomArbitrary(0, yArray.length - 1);\r\n          let tempX = xArray[tempXIndex];\r\n          let tempY = yArray[tempYIndex];\r\n          xArray.splice(tempXIndex, 1);\r\n          yArray.splice(tempYIndex, 1);\r\n          let key = tempX + \",\" + tempY;\r\n          this.points.push({x: tempX, y: tempY});\r\n          this.pointPathMap[key] = this.drawPoint(this.scope, this.p2c({x: tempX, y: tempY}), 10);\r\n        }\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    pointNum() {\r\n      return this.points.length;\r\n    },\r\n    getPointPath(point) {\r\n      return this.pointPathMap[point.x + \",\" + point.y];\r\n    },\r\n    readState() {\r\n      this.resetDisplay();\r\n      let state = this.states[this.step];\r\n      if (state.type === 1) {\r\n        // Divide\r\n        let left = state.left;\r\n        let right = state.right;\r\n        let leftColor = primary;\r\n        let rightColor = link;\r\n        for (let j = 0; j < left.length; j++) {\r\n          this.getPointPath(left[j]).fillColor = leftColor;\r\n        }\r\n        for (let j = 0; j < right.length; j++) {\r\n          this.getPointPath(right[j]).fillColor = rightColor;\r\n        }\r\n        this.displaySearchArea(state.xMin, state.xMax);\r\n      } else if (state.type === 2) {\r\n        // Brutal force compute convex hull\r\n        let color = primary;\r\n        if (state.part === 1) {\r\n          color = link;\r\n        }\r\n        for (let j = 0; j < state.points.length; j++) {\r\n          this.displayPath.add(this.p2c(state.points[j]));\r\n          this.getPointPath(state.points[j]).fillColor = color;\r\n        }\r\n        this.displayPath.add(this.p2c(state.points[0]));\r\n        this.displaySearchArea(state.xMin, state.xMax);\r\n      } else if (state.type === 3) {\r\n        // Merge\r\n        let left = state.left;\r\n        let right = state.right;\r\n        let leftColor = primary;\r\n        let rightColor = link;\r\n        this.leftPath = new paper.Path({\r\n          strokeColor: \"#000000\",\r\n        });\r\n        this.rightPath = new paper.Path({\r\n          strokeColor: \"#000000\",\r\n        });\r\n        for (let j = 0; j < left.length; j++) {\r\n          this.getPointPath(left[j]).fillColor = leftColor;\r\n          this.leftPath.add(this.p2c(left[j]));\r\n        }\r\n        this.leftPath.add(this.p2c(left[0]));\r\n        for (let j = 0; j < right.length; j++) {\r\n          this.getPointPath(right[j]).fillColor = rightColor;\r\n          this.rightPath.add(this.p2c(right[j]));\r\n        }\r\n        this.rightPath.add(this.p2c(right[0]));\r\n        this.displaySearchArea(state.xMin, state.xMax);\r\n      } else if (state.type === 4) {\r\n        // Find and connect tangent line\r\n        for (let j = 0; j < state.points.length; j++) {\r\n          this.displayPath.add(this.p2c(state.points[j]));\r\n          this.getPointPath(state.points[j]).fillColor = complete;\r\n        }\r\n        this.displayPath.add(this.p2c(state.points[0]));\r\n        this.displaySearchArea(state.xMin, state.xMax);\r\n      }\r\n      this.sendMessage(state.message);\r\n      return state.type;\r\n    },\r\n    nextState() {\r\n      if (this.step + 1 < this.states.length) {\r\n        this.step++;\r\n        return this.readState();\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    lastState() {\r\n      if (this.step - 1 >= 0) {\r\n        this.step--;\r\n        return this.readState();\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    prepare() {\r\n      this.addPoints = false;\r\n      if (this.convexHullList.length < 3) {\r\n        let mergeHullResult = mergeHull.exec(this.points);\r\n        this.states = mergeHullResult.process;\r\n        this.convexHullList = mergeHullResult.result;\r\n      }\r\n      this.resetDisplay();\r\n      let pointList = this.points.slice();\r\n      pointList.sort(function (p1, p2) {\r\n        let x1 = p1.x\r\n        let x2 = p2.x;\r\n        if (x1 === x2) {\r\n          p2.x += 0.00001; // Impossible!\r\n        }\r\n        if (x1 < x2) {\r\n          return -1;\r\n        }\r\n        if (x1 > x2) {\r\n          return 1;\r\n        }\r\n      });\r\n      this.sortedPoints = pointList.slice();\r\n      for (let i = 0; i < pointList.length; i++) {\r\n        let circle = this.pointPathMap[pointList[i].x + \",\" + pointList[i].y];\r\n        circle.opacity = (1 - (pointList.length - i) / pointList.length) / 2 + 0.3;\r\n      }\r\n      this.sendMessage(\"Point color becomes darker as its x coordinate increasing.\");\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.canvas-style {\r\n  /*cursor: crosshair;*/\r\n  cursor: pointer;\r\n  width: 800px !important;\r\n  height: 600px !important;\r\n  border: 5px solid black;\r\n  border-radius: 10px;\r\n  display: block;\r\n  margin: auto;\r\n  box-shadow: 0 10px 8px -8px black;\r\n  background-color: white;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MergeHullCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MergeHullCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MergeHullCanvas.vue?vue&type=template&id=ec1bec72&scoped=true&\"\nimport script from \"./MergeHullCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./MergeHullCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MergeHullCanvas.vue?vue&type=style&index=0&id=ec1bec72&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ec1bec72\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <Nav ref=\"nav\"/>\r\n    <h1 class=\"subtitle\">{{ msg }}</h1>\r\n    <div class=\"tile is-ancestor\">\r\n      <div class=\"tile is-parent is-8\">\r\n        <div class=\"tile is-child box\">\r\n          <MergeHullCanvas :canvasId=\"'canvas-one'\" ref=\"c\" @message=\"getMessage\" @lock=\"lock=true\"\r\n                           @unlock=\"lock=false\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"tile is-vertical is-parent\">\r\n        <div class=\"tile is-child box\" style=\"min-height: 500px; height: 500px;\">\r\n          <div style=\"margin-top: 150px\">\r\n            <div v-for=\"(item) in text\" :key=\"item.message\">\r\n              <div v-if=\"item.highLight\">\r\n                <div class=\"block has-background-primary has-text-white\">\r\n                  {{ item.msg }}\r\n                </div>\r\n              </div>\r\n              <div v-else>\r\n                <div class=\"block mb-3\">\r\n                  {{ item.msg }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"tile is-child\">\r\n          <button class=\"button\" @click.left=\"addPoints\" :disabled=\"lock\"><strong> Add 10 </strong></button>\r\n          <button class=\"button\" @click.left=\"reset\" :disabled=\"lock\"><strong> Reset </strong></button>\r\n          <button class=\"button\" @click.left=\"last\" :disabled=\"lock\"><strong> Last </strong></button>\r\n          <button class=\"button\" @click.left=\"next\" :disabled=\"lock\"><strong> Next </strong></button>\r\n          <button v-if=\"clickAuto\" class=\"button is-primary\" @click.left=\"auto\"><strong> Auto </strong></button>\r\n          <button v-else class=\"button\" @click.left=\"auto\"><strong> Auto </strong></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"preface\">\r\n      <div class=\"modal is-active\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-card\" style=\"max-width: 500px\">\r\n          <header class=\"modal-card-head\">\r\n            <p class=\"modal-card-title\">Explanation</p>\r\n            <button class=\"delete\" aria-label=\"close\" @click.left=\"closePreface\"></button>\r\n          </header>\r\n          <section class=\"modal-card-body\">\r\n            <p class=\"content\"> With the idea of pre-sort the point set, there is another algorithm called Merge Hull\r\n              which also can determine the convex hull in <strong>O(nlogn)</strong> by divide and conquer the point set.\r\n              Merge Hull algorithm divides the point set into left and right part and each part will be divided again\r\n              till\r\n              there is only few points left in the part such as 4 or 5 points. Since there is only few point, we can use\r\n              brutal force to compute the little convex hull in constant time. For the conquer part, the algorithm will\r\n              pick left and right\r\n              parts that have already got convex hulls and try to connect two parts with upper and lower tangent lines.\r\n              One way to find such tangent lines is starting with right most point on left convex hull and left most\r\n              point\r\n              on right convex hull and check points in CCW direction. Then, with the property of \"left turn\" in convex\r\n              hull, we are going to make sure the\r\n              connection of left and right convex hull is always turning left. After we merge all partial convex hulls,\r\n              the final result is exactly the convex hull for the whole point set.</p>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Nav from \"../components/Nav\";\r\nimport MergeHullCanvas from \"../components/MergeHullCanvas\";\r\n\r\nexport default {\r\n  name: \"MergeHull\",\r\n  components: {Nav, MergeHullCanvas},\r\n  data() {\r\n    return {\r\n      msg: \"Please add more than three points on our canvas first.\",\r\n      preface: true,\r\n      lock: false,\r\n      currentIndex: -1,\r\n      clickAuto: false,\r\n      autoing: false,\r\n      text: [\r\n        {\r\n          msg: \"Sorting points by their X coordinate ascending\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Divide\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Brutal force compute convex hull\"\r\n        },\r\n        {\r\n          msg: \"Merge\",\r\n          highLight: false,\r\n        },\r\n        {\r\n          msg: \"Find and connect upper and lower tangent lines\",\r\n          highLight: false,\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  async mounted() {\r\n  },\r\n  methods: {\r\n    async last() {\r\n      let index = this.$refs.c.lastState();\r\n      if (index !== null) {\r\n        this.currentIndex = index;\r\n      } else {\r\n        this.currentIndex = 0;\r\n        await this.$refs.c.prepare();\r\n      }\r\n      for (let i = 0; i < this.text.length; i++) {\r\n        this.text[i].highLight = i === this.currentIndex;\r\n      }\r\n    },\r\n    async next() {\r\n      if (this.$refs.c.pointNum() <= 3) {\r\n        return false;\r\n      }\r\n      if (this.currentIndex === -1) {\r\n        this.currentIndex++;\r\n        for (let i = 0; i < this.text.length; i++) {\r\n          this.text[i].highLight = i === this.currentIndex;\r\n        }\r\n        await this.$refs.c.prepare();\r\n      } else {\r\n        let index = this.$refs.c.nextState();\r\n        if (index !== null) {\r\n          this.currentIndex = index;\r\n          for (let i = 0; i < this.text.length; i++) {\r\n            this.text[i].highLight = i === this.currentIndex;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    async reset() {\r\n      this.currentIndex = -1;\r\n      for (let i = 0; i < this.text.length; i++) {\r\n        this.text[i].highLight = false;\r\n      }\r\n      this.msg = \"Please add more than three points on our canvas first.\";\r\n      await this.$refs.c.reset();\r\n      this.lock = false;\r\n      this.clickAuto = false;\r\n    },\r\n    addPoints() {\r\n      this.autoing = false;\r\n      if (this.$refs.c.pointNum() > 200) {\r\n        this.msg = \"Max point number has been set to 200.\"\r\n        return;\r\n      }\r\n      if (this.$refs.c.randomGeneratePoints(10, 0, 800, 0, 600)) {\r\n        this.msg = \"Randomly add 10 points on canvas and all points have different x and y coordinates.\"\r\n      }\r\n    },\r\n    async auto() {\r\n      let pointNum = this.$refs.c.pointNum();\r\n      let sleepPeriod = 100;\r\n      if (pointNum > 50) {\r\n        sleepPeriod = 50;\r\n      } else if (pointNum > 100) {\r\n        sleepPeriod = 5;\r\n      }\r\n      this.autoing = !this.autoing;\r\n      if (this.autoing) {\r\n        this.clickAuto = true;\r\n        while (this.autoing) {\r\n          try {\r\n            if (!await this.next()) {\r\n              break;\r\n            }\r\n          } catch (e) {\r\n            break;\r\n          }\r\n          await new Promise(r => setTimeout(r, sleepPeriod));\r\n        }\r\n        this.clickAuto = false;\r\n        this.autoing = false;\r\n      }\r\n    },\r\n    getMessage(msg) {\r\n      this.msg = msg;\r\n    },\r\n    closePreface() {\r\n      this.preface = false;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MergeHull.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MergeHull.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MergeHull.vue?vue&type=template&id=625695c8&scoped=true&\"\nimport script from \"./MergeHull.vue?vue&type=script&lang=js&\"\nexport * from \"./MergeHull.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"625695c8\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MergeHullCanvas.vue?vue&type=style&index=0&id=ec1bec72&scoped=true&lang=css&\""],"sourceRoot":""}